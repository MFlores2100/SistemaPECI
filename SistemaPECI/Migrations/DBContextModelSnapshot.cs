// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaPECI.Data.Context;

#nullable disable

namespace SistemaPECI.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("SistemaPECI.Data.Entidades.Canton", b =>
                {
                    b.Property<int>("IDCanton")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDCanton");

                    b.ToTable("Canton");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.ComposicionInversion", b =>
                {
                    b.Property<int>("IDComposicionInversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Acumulado")
                        .HasColumnType("REAL");

                    b.Property<double>("Anual")
                        .HasColumnType("REAL");

                    b.Property<int>("IDProyecto")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Porcentaje")
                        .HasColumnType("REAL");

                    b.HasKey("IDComposicionInversion");

                    b.HasIndex("IDProyecto");

                    b.ToTable("ComposicionInversion");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.Departamento", b =>
                {
                    b.Property<int>("IDDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreDepartamento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDDepartamento");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.DetalleAuditoria", b =>
                {
                    b.Property<int>("IDDetalleAuditoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDAuditoria")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("INTEGER");

                    b.HasKey("IDDetalleAuditoria");

                    b.HasIndex("IDAuditoria");

                    b.HasIndex("IDUsuario");

                    b.ToTable("DetalleAuditoria");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.DetalleRegion", b =>
                {
                    b.Property<int>("IDDetalleRegion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DireccionExacta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IDProvincia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDRegion")
                        .HasColumnType("INTEGER");

                    b.HasKey("IDDetalleRegion");

                    b.HasIndex("IDProvincia");

                    b.HasIndex("IDRegion");

                    b.ToTable("DetalleRegion");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.GestionFinanciamiento", b =>
                {
                    b.Property<int>("IDGestionFinanciamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Capex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("DesgloseMeses")
                        .HasColumnType("REAL");

                    b.Property<int>("IDProyecto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDRegion")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ManoObra")
                        .HasColumnType("REAL");

                    b.Property<double>("Material")
                        .HasColumnType("REAL");

                    b.Property<double>("Monto")
                        .HasColumnType("REAL");

                    b.Property<bool>("Opex")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalMaterialObra")
                        .HasColumnType("REAL");

                    b.HasKey("IDGestionFinanciamiento");

                    b.HasIndex("IDProyecto");

                    b.HasIndex("IDRegion");

                    b.ToTable("GestionFinanciamiento");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.ListaPrecios", b =>
                {
                    b.Property<int>("IDListaPrecios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CostosIndirectos")
                        .HasColumnType("REAL");

                    b.Property<double>("CostosPromedioOperacion")
                        .HasColumnType("REAL");

                    b.Property<double>("InflacionCR")
                        .HasColumnType("REAL");

                    b.Property<double>("InflacionUSA")
                        .HasColumnType("REAL");

                    b.Property<double>("TasaImpuestosSobreMateriales")
                        .HasColumnType("REAL");

                    b.Property<double>("TipoCambioVentaFinal")
                        .HasColumnType("REAL");

                    b.Property<double>("TipoCambioVentaPromedio")
                        .HasColumnType("REAL");

                    b.Property<double>("VariacionTipoCambioFinal")
                        .HasColumnType("REAL");

                    b.Property<double>("VariacionTipoCambioPromedio")
                        .HasColumnType("REAL");

                    b.HasKey("IDListaPrecios");

                    b.ToTable("ListaPrecios");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.MaterialEquipo", b =>
                {
                    b.Property<int>("IDMaterialEquipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.HasKey("IDMaterialEquipo");

                    b.ToTable("MaterialEquipo");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.MaterialRequerido", b =>
                {
                    b.Property<int>("IDMaterialRequerido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cantidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IDMaterialEquipo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDProyecto")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoMaterial")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDMaterialRequerido");

                    b.HasIndex("IDMaterialEquipo");

                    b.HasIndex("IDProyecto");

                    b.ToTable("MaterialRequerido");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.Persona", b =>
                {
                    b.Property<int>("IDPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDPersona");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.Provincia", b =>
                {
                    b.Property<int>("IDProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDCanton")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDProvincia");

                    b.HasIndex("IDCanton");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.Proyecto", b =>
                {
                    b.Property<int>("IDProyecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnioInicio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoPINE")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Duracion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IDRegion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ManoObra")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDProyecto");

                    b.HasIndex("IDRegion");

                    b.ToTable("Proyecto");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.ProyectoRegion", b =>
                {
                    b.Property<int>("IDProyectoRegion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDProyecto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDRegion")
                        .HasColumnType("INTEGER");

                    b.HasKey("IDProyectoRegion");

                    b.HasIndex("IDProyecto");

                    b.HasIndex("IDRegion");

                    b.ToTable("ProyectoRegion");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.ProyectoUsuario", b =>
                {
                    b.Property<int>("IDProyectoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDProyecto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("INTEGER");

                    b.HasKey("IDProyectoUsuario");

                    b.HasIndex("IDProyecto");

                    b.HasIndex("IDUsuario");

                    b.ToTable("ProyectoUsuario");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.Region", b =>
                {
                    b.Property<int>("IDRegion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDRegion");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.RegistroAuditoria", b =>
                {
                    b.Property<int>("IDAuditoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DatosNuevos")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DatosPrevios")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EntidadAfectada")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoOperacion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDAuditoria");

                    b.ToTable("RegistroAuditoria");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.Usuario", b =>
                {
                    b.Property<int>("IDUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IDDepartamento")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDPersona")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDUsuario");

                    b.HasIndex("IDDepartamento");

                    b.HasIndex("IDPersona");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.ComposicionInversion", b =>
                {
                    b.HasOne("SistemaPECI.Data.Entidades.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("IDProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.DetalleAuditoria", b =>
                {
                    b.HasOne("SistemaPECI.Data.Entidades.RegistroAuditoria", "Auditoria")
                        .WithMany("DetallesAuditoria")
                        .HasForeignKey("IDAuditoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaPECI.Data.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auditoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.DetalleRegion", b =>
                {
                    b.HasOne("SistemaPECI.Data.Entidades.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("IDProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaPECI.Data.Entidades.Region", "Region")
                        .WithMany()
                        .HasForeignKey("IDRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.GestionFinanciamiento", b =>
                {
                    b.HasOne("SistemaPECI.Data.Entidades.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("IDProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaPECI.Data.Entidades.Region", "Region")
                        .WithMany()
                        .HasForeignKey("IDRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.MaterialRequerido", b =>
                {
                    b.HasOne("SistemaPECI.Data.Entidades.MaterialEquipo", "MaterialEquipo")
                        .WithMany()
                        .HasForeignKey("IDMaterialEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaPECI.Data.Entidades.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("IDProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialEquipo");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.Provincia", b =>
                {
                    b.HasOne("SistemaPECI.Data.Entidades.Canton", "Canton")
                        .WithMany()
                        .HasForeignKey("IDCanton")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canton");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.Proyecto", b =>
                {
                    b.HasOne("SistemaPECI.Data.Entidades.Region", "Region")
                        .WithMany()
                        .HasForeignKey("IDRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.ProyectoRegion", b =>
                {
                    b.HasOne("SistemaPECI.Data.Entidades.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("IDProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaPECI.Data.Entidades.Region", "Region")
                        .WithMany()
                        .HasForeignKey("IDRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.ProyectoUsuario", b =>
                {
                    b.HasOne("SistemaPECI.Data.Entidades.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("IDProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaPECI.Data.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.Usuario", b =>
                {
                    b.HasOne("SistemaPECI.Data.Entidades.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("IDDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaPECI.Data.Entidades.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("IDPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("SistemaPECI.Data.Entidades.RegistroAuditoria", b =>
                {
                    b.Navigation("DetallesAuditoria");
                });
#pragma warning restore 612, 618
        }
    }
}
